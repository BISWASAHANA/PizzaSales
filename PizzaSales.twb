<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.RelationshipCalculations.true...RelationshipCalculations />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Toppings' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Beef Chuck Roast&quot;'>
        <calculation class='tableau' formula='&quot;Beef Chuck Roast&quot;' />
        <members>
          <member value='&quot;Barbecued Chicken&quot;' />
          <member value='&quot;Brie Carre Cheese&quot;' />
          <member value='&quot;Calabrese Salami&quot;' />
          <member value='&quot;Chicken&quot;' />
          <member value='&quot;Coarse Sicilian Salami&quot;' />
          <member value='&quot;Eggplant&quot;' />
          <member value='&quot;Genoa Salami&quot;' />
          <member value='&quot;Prosciutto di San Daniele&quot;' />
          <member value='&quot;Ricotta Cheese&quot;' />
          <member value='&quot;Sliced Ham&quot;' />
          <member value='&quot;Soppressata Salami&quot;' />
          <member value='&quot;æ…›duja Salami&quot;' />
          <member value='&quot;Anchovies&quot;' />
          <member value='&quot;Arugula&quot;' />
          <member value='&quot;Capocollo&quot;' />
          <member value='&quot;Gorgonzola Piccante Cheese&quot;' />
          <member value='&quot;Pancetta&quot;' />
          <member value='&quot;Pineapple&quot;' />
          <member value='&quot;Prosciutto&quot;' />
          <member value='&quot;Provolone Cheese&quot;' />
          <member value='&quot;Caramelized Onions&quot;' />
          <member value='&quot;Italian Sausage&quot;' />
          <member value='&quot;Mozzarella Cheese&quot;' />
          <member value='&quot;Pepperoni&quot;' />
          <member value='&quot;Smoked Gouda Cheese&quot;' />
          <member value='&quot;Chorizo Sausage&quot;' />
          <member value='&quot;Goat Cheese&quot;' />
          <member value='&quot;Green Peppers&quot;' />
          <member value='&quot;Luganega Sausage&quot;' />
          <member value='&quot;Mushrooms&quot;' />
          <member value='&quot;Parmigiano Reggiano Cheese&quot;' />
          <member value='&quot;Pears&quot;' />
          <member value='&quot;Romano Cheese&quot;' />
          <member value='&quot;Sun-dried Tomatoes&quot;' />
          <member value='&quot;Tomatoes&quot;' />
          <member value='&quot;Artichoke&quot;' />
          <member value='&quot;Bacon&quot;' />
          <member value='&quot;Beef Chuck Roast&quot;' />
          <member value='&quot;Blue Cheese&quot;' />
          <member value='&quot;Feta Cheese&quot;' />
          <member value='&quot;Friggitello Peppers&quot;' />
          <member value='&quot;Green Olives&quot;' />
          <member value='&quot;Jalapeno Peppers&quot;' />
          <member value='&quot;Onions&quot;' />
          <member value='&quot;Peperoncini verdi&quot;' />
          <member value='&quot;Red Peppers&quot;' />
          <member value='&quot;Thai Sweet Chilli Sauce&quot;' />
          <member value='&quot;Thyme&quot;' />
          <member value='&quot;Alfredo Sauce&quot;' />
          <member value='&quot;Barbecue Sauce&quot;' />
          <member value='&quot;Corn&quot;' />
          <member value='&quot;Fontina Cheese&quot;' />
          <member value='&quot;Kalamata Olives&quot;' />
          <member value='&quot;Oregano&quot;' />
          <member value='&quot;Plum Tomatoes&quot;' />
          <member value='&quot;Zucchini&quot;' />
          <member value='&quot;Cilantro&quot;' />
          <member value='&quot;Gouda Cheese&quot;' />
          <member value='&quot;Pesto Sauce&quot;' />
          <member value='&quot;Red Onions&quot;' />
          <member value='&quot;Spinach&quot;' />
          <member value='&quot;Asiago Cheese&quot;' />
          <member value='&quot;Chipotle Sauce&quot;' />
          <member value='&quot;Garlic&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='pizza_sales (Pizza_Sales)' inline='true' name='federated.03aaaz509d0hyu194xdnb0v5r7yk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Pizza_Sales' name='excel-direct.1omvm6r1o8az2o0zj6geg16qgmbf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Data and Datasets/Pizza_Sales.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='ccdemo' name='excel-direct.0xenym90xf58gj145y9vz19weie2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Data and Datasets/ccdemo.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0xenym90xf58gj145y9vz19weie2' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:A3:no:A1:A3:0' header='yes' outcome='6'>
            <column datatype='integer' name='Path' ordinal='0' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1omvm6r1o8az2o0zj6geg16qgmbf' name='pizza_sales' table='[pizza_sales$]' type='table'>
            <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='2'>
              <column datatype='integer' name='order_details_id' ordinal='0' />
              <column datatype='integer' name='order_id' ordinal='1' />
              <column datatype='string' name='pizza_id' ordinal='2' />
              <column datatype='integer' name='quantity' ordinal='3' />
              <column datatype='date' name='order_date' ordinal='4' />
              <column datatype='datetime' name='order_time' ordinal='5' />
              <column datatype='real' name='unit_price' ordinal='6' />
              <column datatype='real' name='total_price' ordinal='7' />
              <column datatype='string' name='pizza_size' ordinal='8' />
              <column datatype='string' name='pizza_category' ordinal='9' />
              <column datatype='string' name='pizza_ingredients' ordinal='10' />
              <column datatype='string' name='pizza_name' ordinal='11' />
            </columns>
          </relation>
          <relation connection='excel-direct.0xenym90xf58gj145y9vz19weie2' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:A3:no:A1:A3:0' header='yes' outcome='6'>
              <column datatype='integer' name='Path' ordinal='0' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:A3:no:A1:A3:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_details_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_details_id]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>order_details_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pizza_id]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>pizza_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>quantity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_time]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>order_time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unit_price]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>unit_price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_price]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>total_price</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza_size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pizza_size]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>pizza_size</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pizza_category]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>pizza_category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza_ingredients</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pizza_ingredients]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>pizza_ingredients</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pizza_name]</local-name>
            <parent-name>[pizza_sales]</parent-name>
            <remote-alias>pizza_name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F4B83E9060A146188F0ABDF4448F752B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Count' datatype='integer' name='[Calculation_1622140357856477186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Edges' datatype='integer' name='[Calculation_1622140357856608259]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1622140357856661508]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Angle' datatype='real' name='[Calculation_1622140357856747525]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='([Calculation_1622140357856608259]-1)*(2*PI()/WINDOW_MAX([Calculation_1622140357856608259]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Number of slices' datatype='integer' name='[Calculation_1622140357857181702]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX([Calculation_1622140357856477186])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Radius' datatype='real' name='[Calculation_1622140357857398791]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SQRT((COUNT([pizza_size]))/PI())' />
      </column>
      <column caption='X' datatype='real' name='[Calculation_1622140357859627016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Calculation_1622140357856661508]=1 OR &#13;&#10;[Calculation_1622140357856661508]=WINDOW_MAX([Calculation_1622140357856661508]),&#13;&#10;0,&#13;&#10;WINDOW_MAX([Calculation_1622140357857398791])*COS([Calculation_1622140357856747525]+&#13;&#10;((([Calculation_1622140357856661508]-2)*WINDOW_MAX(2*PI())/[Calculation_1622140357857181702]*99))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Y' datatype='real' name='[Calculation_1622140357860528137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Calculation_1622140357856661508]=1 OR &#13;&#10;[Calculation_1622140357856661508]=WINDOW_MAX([Calculation_1622140357856661508]),&#13;&#10;0,&#13;&#10;WINDOW_MAX([Calculation_1622140357857398791])*SIN([Calculation_1622140357856747525]+&#13;&#10;((([Calculation_1622140357856661508]-2)*WINDOW_MAX(2*PI())/[Calculation_1622140357857181702]*99))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Order-hours' datatype='string' name='[Calculation_257268194904588292]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATEPART(&apos;hour&apos;, [order_time]) &lt; 3 THEN &apos;00:00 - 03:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 6 THEN &apos;03:00 - 06:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 9 THEN &apos;06:00 - 09:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 12 THEN &apos;09:00 - 12:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 15 THEN &apos;12:00 - 15:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 18 THEN &apos;15:00 - 18:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 21 THEN &apos;18:00 - 21:00&apos;&#13;&#10;ELSE &apos;21:00 - 00:00&apos;&#13;&#10;END' />
      </column>
      <column caption='Topping' datatype='string' name='[Calculation_257268194916069384]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([pizza_ingredients - Split 1], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 2], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 3], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 4], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 5], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 6], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 7], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 8], &quot;Goat Cheese&quot;)&#13;&#10;THEN &quot;Goat Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Feta Cheese&quot;)&#13;&#10;THEN &quot;Feta Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Spinach&quot;)&#13;&#10;THEN &quot;Spinach&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Avocado&quot;)&#13;&#10;THEN &quot;Avocado&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Tomatoes&quot;)&#13;&#10;THEN &quot;Tomatoes&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Artichoke&quot;)&#13;&#10;THEN &quot;Artichoke&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Barbecued Chicken&quot;)&#13;&#10;THEN &quot;Barbecued Chicken&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Salami&quot;)&#13;&#10;THEN &quot;Salami&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Plum Tomatoes&quot;)&#13;&#10;THEN &quot;Plum Tomatoes&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Beef Chuck Roast&quot;)&#13;&#10;THEN &quot;Beef Chuck Roast&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Blue Cheese&quot;)&#13;&#10;THEN &quot;Blue Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Feta Cheese&quot;)&#13;&#10;THEN &quot;Feta Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Friggitello Peppers&quot;)&#13;&#10;THEN &quot;Friggitello Peppers&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Green Olives&quot;)&#13;&#10;THEN &quot;Green Olives&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Jalapeno Peppers&quot;)&#13;&#10;THEN &quot;Jalapeno Peppers&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Onions&quot;)&#13;&#10;THEN &quot;Onions&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Peperoncini verdi&quot;)&#13;&#10;THEN &quot;Peperoncini verdi&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Red Peppers&quot;)&#13;&#10;THEN &quot;Red Peppers&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Thai Sweet Chilli Sauce&quot;)&#13;&#10;THEN &quot;Thai Sweet Chilli Sauce&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Thyme&quot;)&#13;&#10;THEN &quot;Thyme&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Alfredo Sauce&quot;)&#13;&#10;THEN &quot;Alfredo Sauce&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Barbecue Sauce&quot;)&#13;&#10;THEN &quot;Barbecue Sauce&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Corn&quot;)&#13;&#10;THEN &quot;Corn&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Fontina Cheese&quot;)&#13;&#10;THEN &quot;Fontina Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Kalamata Olives&quot;)&#13;&#10;THEN &quot;Kalamata Olives&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Oregano&quot;)&#13;&#10;THEN &quot;Oregano&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Zucchini&quot;)&#13;&#10;THEN &quot;Zucchini&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Cilantro&quot;)&#13;&#10;THEN &quot;Cilantro&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Gouda Cheese&quot;)&#13;&#10;THEN &quot;Gouda Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Pesto Sauce&quot;)&#13;&#10;THEN &quot;Pesto Sauce&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Red Onions&quot;)&#13;&#10;THEN &quot;Red Onions&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Asiago Cheese&quot;)&#13;&#10;THEN &quot;Asiago Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Chipotle Sauce&quot;)&#13;&#10;THEN &quot;Chipotle Sauce&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Garlic&quot;)&#13;&#10;THEN &quot;Garlic&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Bacon&quot;)&#13;&#10;THEN &quot;Bacon&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Brie Carre Cheese&quot;)&#13;&#10;THEN &quot;Brie Carre Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Calabrese Salami&quot;)&#13;&#10;THEN &quot;Calabrese Salami&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Chicken&quot;)&#13;&#10;THEN &quot;Chicken&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Coarse Sicilian Salami&quot;)&#13;&#10;THEN &quot;Coarse Sicilian Salami&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Eggplant&quot;)&#13;&#10;THEN &quot;Eggplant&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Genoa Salami&quot;)&#13;&#10;THEN &quot;Genoa Salami&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Prosciutto di San Daniele&quot;)&#13;&#10;THEN &quot;Prosciutto di San Daniele&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Ricotta Cheese&quot;)&#13;&#10;THEN &quot;Ricotta Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Sliced Ham&quot;)&#13;&#10;THEN &quot;Sliced Ham&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Soppressata Salami&quot;)&#13;&#10;THEN &quot;Soppressata Salami&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Anchovies&quot;)&#13;&#10;THEN &quot;Anchovies&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Argula&quot;)&#13;&#10;THEN &quot;Argula&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Capocollo&quot;)&#13;&#10;THEN &quot;Capocollo&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Gorgonzola Piccante Cheese&quot;)&#13;&#10;THEN &quot;Gorgonzola Piccante Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Pancetta&quot;)&#13;&#10;THEN &quot;Pancetta&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Pineapple&quot;)&#13;&#10;THEN &quot;Pineapple&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Prosciutto&quot;)&#13;&#10;THEN &quot;Prosciutto&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Provolone Cheese&quot;)&#13;&#10;THEN &quot;Provolone Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Caramelized Onions&quot;)&#13;&#10;THEN &quot;Caramelized Onions&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Italian Sausage&quot;)&#13;&#10;THEN &quot;Italian Sausage&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Pepperoni&quot;)&#13;&#10;THEN &quot;Pepperoni&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Chorizo Cheese&quot;)&#13;&#10;THEN &quot;Chorizo Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Green Peppers&quot;)&#13;&#10;THEN &quot;Green Peppers&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Mozzarella Cheese&quot;)&#13;&#10;THEN &quot;Mozzarella Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Smoked Gouda Cheese&quot;)&#13;&#10;THEN &quot;Smoked Gouda Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Mushrooms&quot;)&#13;&#10;THEN &quot;Mushrooms&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Luganega Sausage&quot;)&#13;&#10;THEN &quot;Luganega Sausage&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Parmigiano Reggiano Cheese&quot;)&#13;&#10;THEN &quot;Parmigiano Reggiano Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Pears&quot;)&#13;&#10;THEN &quot;Pears&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Romano Cheese&quot;)&#13;&#10;THEN &quot;Romano Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Sun-dried Tomatoes&quot;)&#13;&#10;THEN &quot;Sun-dried Tomatoes&quot;&#13;&#10;END' />
      </column>
      <column caption='Topping-occurence' datatype='integer' name='[Calculation_257268194932953098]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;&quot; THEN NULL // Handles empty parameter values if applicable&#13;&#10;ELSE&#13;&#10;  IF CONTAINS([pizza_ingredients - Split 1], [Parameters].[Parameter 1]) THEN 1 &#13;&#10;  ELSEIF CONTAINS([pizza_ingredients - Split 2], [Parameters].[Parameter 1]) THEN 1&#13;&#10;  ELSEIF CONTAINS([pizza_ingredients - Split 3], [Parameters].[Parameter 1]) THEN 1&#13;&#10;  ELSEIF CONTAINS([pizza_ingredients - Split 4], [Parameters].[Parameter 1]) THEN 1&#13;&#10;  ELSEIF CONTAINS([pizza_ingredients - Split 5], [Parameters].[Parameter 1]) THEN 1&#13;&#10;  ELSEIF CONTAINS([pizza_ingredients - Split 6], [Parameters].[Parameter 1]) THEN 1&#13;&#10;  ELSEIF CONTAINS([pizza_ingredients - Split 7], [Parameters].[Parameter 1]) THEN 1&#13;&#10;  ELSEIF CONTAINS([pizza_ingredients - Split 8], [Parameters].[Parameter 1]) THEN 1&#13;&#10;  ELSE 0 &#13;&#10;END&#13;&#10;END' />
      </column>
      <column caption='Toppings_Count' datatype='integer' name='[Calculation_257268194938494998]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([pizza_ingredients - Split 1], [Parameters].[Parameter 1]) THEN 1 ELSE 0 END +&#13;&#10;IF CONTAINS([pizza_ingredients - Split 2], [Parameters].[Parameter 1]) THEN 1 ELSE 0 END +&#13;&#10;IF CONTAINS([pizza_ingredients - Split 3], [Parameters].[Parameter 1]) THEN 1 ELSE 0 END +&#13;&#10;IF CONTAINS([pizza_ingredients - Split 4], [Parameters].[Parameter 1]) THEN 1 ELSE 0 END +&#13;&#10;IF CONTAINS([pizza_ingredients - Split 5], [Parameters].[Parameter 1]) THEN 1 ELSE 0 END +&#13;&#10;IF CONTAINS([pizza_ingredients - Split 6], [Parameters].[Parameter 1]) THEN 1 ELSE 0 END +&#13;&#10;IF CONTAINS([pizza_ingredients - Split 7], [Parameters].[Parameter 1]) THEN 1 ELSE 0 END +&#13;&#10;IF CONTAINS([pizza_ingredients - Split 8], [Parameters].[Parameter 1]) THEN 1 ELSE 0 END' />
      </column>
      <column aggregation='None' caption='Path (bin)' datatype='integer' name='[Path (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Path]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Path]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F4B83E9060A146188F0ABDF4448F752B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='pizza_sales' datatype='table' name='[__tableau_internal_object_id__].[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]' role='measure' type='quantitative' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Order Details Id' datatype='integer' name='[order_details_id]' role='dimension' type='ordinal' />
      <column caption='Order Id' datatype='integer' name='[order_id]' role='dimension' type='ordinal' />
      <column caption='Order Time' datatype='datetime' name='[order_time]' role='dimension' type='ordinal' />
      <column caption='Pizza Category' datatype='string' name='[pizza_category]' role='dimension' type='nominal' />
      <column caption='Pizza Id' datatype='string' name='[pizza_id]' role='dimension' type='nominal' />
      <column caption='Pizza Ingredients - Split 1' datatype='string' name='[pizza_ingredients - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='Pizza Ingredients - Split 2' datatype='string' name='[pizza_ingredients - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 2 ) )' />
      </column>
      <column caption='Pizza Ingredients - Split 3' datatype='string' name='[pizza_ingredients - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 3 ) )' />
      </column>
      <column caption='Pizza Ingredients - Split 4' datatype='string' name='[pizza_ingredients - Split 4]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 4 ) )' />
      </column>
      <column caption='Pizza Ingredients - Split 5' datatype='string' name='[pizza_ingredients - Split 5]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 5 ) )' />
      </column>
      <column caption='Pizza Ingredients - Split 6' datatype='string' name='[pizza_ingredients - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 6 ) )' />
      </column>
      <column caption='Pizza Ingredients - Split 7' datatype='string' name='[pizza_ingredients - Split 7]' role='dimension' type='nominal' user:SplitFieldIndex='7' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 7 ) )' />
      </column>
      <column caption='Pizza Ingredients - Split 8' datatype='string' name='[pizza_ingredients - Split 8]' role='dimension' type='nominal' user:SplitFieldIndex='8' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 8 ) )' />
      </column>
      <column caption='Pizza Ingredients' datatype='string' name='[pizza_ingredients]' role='dimension' type='nominal' />
      <column caption='Pizza Name' datatype='string' name='[pizza_name]' role='dimension' type='nominal' />
      <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal' />
      <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
      <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
      <column caption='Unit Price' datatype='real' name='[unit_price]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_257268194916069384]' derivation='None' name='[none:Calculation_257268194916069384:nk]' pivot='key' type='nominal' />
      <column-instance column='[pizza_category]' derivation='None' name='[none:pizza_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[pizza_name]' derivation='None' name='[none:pizza_name:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Ahana Biswas/Documents/My Tableau Repository/Datasources/PizzaSales.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/27/2024 10:57:07 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='pizza_sales (Pizza_Sales)' increment-value='%null%' refresh-type='create' rows-inserted='48620' timestamp-start='2024-09-27 10:57:03.850' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>order_details_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[order_details_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_details_id</remote-alias>
              <ordinal>0</ordinal>
              <family>pizza_sales</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48620</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[order_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_id</remote-alias>
              <ordinal>1</ordinal>
              <family>pizza_sales</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18473</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pizza_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pizza_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pizza_id</remote-alias>
              <ordinal>2</ordinal>
              <family>pizza_sales</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>107</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>quantity</remote-alias>
              <ordinal>3</ordinal>
              <family>pizza_sales</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[order_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_date</remote-alias>
              <ordinal>4</ordinal>
              <family>pizza_sales</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>680</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[order_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_time</remote-alias>
              <ordinal>5</ordinal>
              <family>pizza_sales</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>16287</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>unit_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[unit_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>unit_price</remote-alias>
              <ordinal>6</ordinal>
              <family>pizza_sales</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_price</remote-alias>
              <ordinal>7</ordinal>
              <family>pizza_sales</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>59</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pizza_size</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pizza_size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pizza_size</remote-alias>
              <ordinal>8</ordinal>
              <family>pizza_sales</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pizza_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pizza_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pizza_category</remote-alias>
              <ordinal>9</ordinal>
              <family>pizza_sales</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pizza_ingredients</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pizza_ingredients]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pizza_ingredients</remote-alias>
              <ordinal>10</ordinal>
              <family>pizza_sales</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pizza_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pizza_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pizza_name</remote-alias>
              <ordinal>11</ordinal>
              <family>pizza_sales</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.958702' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0412979' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899361795:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:pizza_category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Supreme&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Veggie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chicken&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Classic&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:pizza_category:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Supreme&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899361795:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Veggie&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899361795:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Chicken&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899361795:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edc948'>
              <multibucket>
                <bucket>&quot;Classic&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899361795:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:pizza_name:nk]&#10;[:Measure Names]' palette='tableau20_10_0' type='palette'>
            <map to='#00ff7f'>
              <multibucket>
                <bucket>&quot;The Vegetables + Vegetables Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#336214'>
              <multibucket>
                <bucket>&quot;The Spinach Pesto Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#34bc3d'>
              <multibucket>
                <bucket>&quot;The Spinach Supreme Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;The Five Cheese Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;The Barbecue Chicken Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;The California Chicken Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6e8b07'>
              <multibucket>
                <bucket>&quot;The Soppressata Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6f0143'>
              <multibucket>
                <bucket>&quot;The Spicy Italian Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;The Hawaiian Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;The Four Cheese Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8a16a7'>
              <multibucket>
                <bucket>&quot;The Pepperoni Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;The Chicken Alfredo Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9ce8d9'>
              <multibucket>
                <bucket>&quot;The Pepperoni, Mushroom, and Peppers Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;The Napolitana Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;The Big Meat Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;The Mediterranean Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b1d17d'>
              <multibucket>
                <bucket>&quot;The Southwest Chicken Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;The Chicken Pesto Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;The Italian Capocollo Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;The Italian Supreme Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;The Mexicana Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;The Pepper Salami Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dd9658'>
              <multibucket>
                <bucket>&quot;The Sicilian Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e14ba5'>
              <multibucket>
                <bucket>&quot;The Thai Chicken Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;The Greek Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;The Classic Deluxe Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1cf27'>
              <multibucket>
                <bucket>&quot;The Spinach and Feta Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f26c13'>
              <multibucket>
                <bucket>&quot;The Prosciutto and Arugula Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;The Brie Carre Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;The Italian Vegetables Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;The Green Garden Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;The Calabrese Pizza&quot;</bucket>
                <bucket>&quot;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_257268194916069384:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Salami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Goat Cheese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sliced Ham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Onions&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Blue Cheese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pepperoni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spinach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prosciutto di San Daniele&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Feta Cheese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tomatoes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garlic&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Toppings' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Beef Chuck Roast&quot;'>
          <calculation class='tableau' formula='&quot;Beef Chuck Roast&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F4B83E9060A146188F0ABDF4448F752B'>
            <properties context=''>
              <relation connection='excel-direct.0xenym90xf58gj145y9vz19weie2' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:A3:no:A1:A3:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Path' ordinal='0' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='pizza_sales' id='pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE'>
            <properties context=''>
              <relation connection='excel-direct.1omvm6r1o8az2o0zj6geg16qgmbf' name='pizza_sales' table='[pizza_sales$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='order_details_id' ordinal='0' />
                  <column datatype='integer' name='order_id' ordinal='1' />
                  <column datatype='string' name='pizza_id' ordinal='2' />
                  <column datatype='integer' name='quantity' ordinal='3' />
                  <column datatype='date' name='order_date' ordinal='4' />
                  <column datatype='datetime' name='order_time' ordinal='5' />
                  <column datatype='real' name='unit_price' ordinal='6' />
                  <column datatype='real' name='total_price' ordinal='7' />
                  <column datatype='string' name='pizza_size' ordinal='8' />
                  <column datatype='string' name='pizza_category' ordinal='9' />
                  <column datatype='string' name='pizza_ingredients' ordinal='10' />
                  <column datatype='string' name='pizza_name' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression _.fcp.RelationshipCalculations.false...op='[1]' _.fcp.RelationshipCalculations.true...op='1' />
              <expression _.fcp.RelationshipCalculations.false...op='[1]' _.fcp.RelationshipCalculations.true...op='1' />
            </expression>
            <first-end-point object-id='pizza!sales_5AEB05D92DDF456EA04060D79FE0B8AE' />
            <second-end-point object-id='Sheet1_F4B83E9060A146188F0ABDF4448F752B' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.03aaaz509d0hyu194xdnb0v5r7yk'>
      <datasources>
        <datasource caption='pizza_sales (Pizza_Sales)' name='federated.03aaaz509d0hyu194xdnb0v5r7yk' />
      </datasources>
      <datasource-dependencies datasource='federated.03aaaz509d0hyu194xdnb0v5r7yk'>
        <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
        <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]'>
        <groupfilter function='level-members' level='[none:pizza_size:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Categorywise Pizza Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='pizza_sales (Pizza_Sales)' name='federated.03aaaz509d0hyu194xdnb0v5r7yk' />
          </datasources>
          <datasource-dependencies datasource='federated.03aaaz509d0hyu194xdnb0v5r7yk'>
            <column-instance column='[pizza_category]' derivation='Count' name='[cnt:pizza_category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_date]' derivation='Month' name='[mn:order_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[pizza_category]' derivation='None' name='[none:pizza_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
            <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
            <column caption='Pizza Category' datatype='string' name='[pizza_category]' role='dimension' type='nominal' />
            <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_category:qk]' field-type='quantitative' major-origin='0' major-spacing='150' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_category:qk]' scope='rows' value='Pizza Sales Count' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[mn:order_date:ok]' value='iLLL' />
            <format attr='text-orientation' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[mn:order_date:ok]' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e5fff2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#e5fff2' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='7' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]' />
              <tooltip column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[sum:total_price:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month of Order Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[mn:order_date:ok]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Pizza Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Count of Pizza Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_category:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Sales: </run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[sum:total_price:qk]>$]]></run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_category:qk]</rows>
        <cols>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[mn:order_date:ok]</cols>
      </table>
      <simple-id uuid='{2478B308-5C8E-44D1-9047-8ED657D795EE}' />
    </worksheet>
    <worksheet name='Favourite Pizza'>
      <table>
        <view>
          <datasources>
            <datasource caption='pizza_sales (Pizza_Sales)' name='federated.03aaaz509d0hyu194xdnb0v5r7yk' />
          </datasources>
          <datasource-dependencies datasource='federated.03aaaz509d0hyu194xdnb0v5r7yk'>
            <column caption='AVG(0)' datatype='real' name='[Calculation_257268194899312641]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column caption='AVG(1)' datatype='real' name='[Calculation_257268194899361795]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='AVG(1)' />
            </column>
            <column-instance column='[pizza_category]' derivation='Count' name='[cnt:pizza_category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pizza_name]' derivation='Count' name='[cnt:pizza_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pizza_category]' derivation='None' name='[none:pizza_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[pizza_name]' derivation='None' name='[none:pizza_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
            <column caption='Pizza Category' datatype='string' name='[pizza_category]' role='dimension' type='nominal' />
            <column caption='Pizza Name' datatype='string' name='[pizza_name]' role='dimension' type='nominal' />
            <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_257268194899312641]' derivation='User' name='[usr:Calculation_257268194899312641:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_257268194899361795]' derivation='User' name='[usr:Calculation_257268194899361795:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899361795:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='1.0' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899361795:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]' field-type='quantitative' fold='true' major-origin='0.0' major-show='false' major-spacing='inf' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#e5fff2' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='464' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e5fff2' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#e5fff2' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='464' />
                <format attr='maxwidth' value='464' />
                <format attr='minheight' value='463' />
                <format attr='maxheight' value='463' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899361795:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]' />
              <color column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[:Measure Names]' />
              <wedge-size column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_category:qk]' />
              <text column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Pizza Category: </run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Sale: </run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_category:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2413811683654785' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_name:nk]' />
              <color column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[:Measure Names]' />
              <wedge-size column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_name:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Pizza Name: </run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_name:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Sales: </run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_name:qk]>]]></run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1094474792480469' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899361795:qk] + [federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_257268194899312641:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{FC1B88A9-811B-418D-9F9A-A5A8B51ABE83}' />
    </worksheet>
    <worksheet name='Favourite Toppings'>
      <table>
        <view>
          <datasources>
            <datasource caption='pizza_sales (Pizza_Sales)' name='federated.03aaaz509d0hyu194xdnb0v5r7yk' />
          </datasources>
          <datasource-dependencies datasource='federated.03aaaz509d0hyu194xdnb0v5r7yk'>
            <column caption='Topping' datatype='string' name='[Calculation_257268194916069384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([pizza_ingredients - Split 1], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 2], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 3], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 4], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 5], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 6], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 7], &quot;Goat Cheese&quot;) OR&#13;&#10;   CONTAINS([pizza_ingredients - Split 8], &quot;Goat Cheese&quot;)&#13;&#10;THEN &quot;Goat Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Feta Cheese&quot;)&#13;&#10;THEN &quot;Feta Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Spinach&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Spinach&quot;)&#13;&#10;THEN &quot;Spinach&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Avocado&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Avocado&quot;)&#13;&#10;THEN &quot;Avocado&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Tomatoes&quot;)&#13;&#10;THEN &quot;Tomatoes&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Artichoke&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Artichoke&quot;)&#13;&#10;THEN &quot;Artichoke&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Barbecued Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Barbecued Chicken&quot;)&#13;&#10;THEN &quot;Barbecued Chicken&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Salami&quot;)&#13;&#10;THEN &quot;Salami&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Plum Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Plum Tomatoes&quot;)&#13;&#10;THEN &quot;Plum Tomatoes&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Beef Chuck Roast&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Beef Chuck Roast&quot;)&#13;&#10;THEN &quot;Beef Chuck Roast&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Blue Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Blue Cheese&quot;)&#13;&#10;THEN &quot;Blue Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Feta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Feta Cheese&quot;)&#13;&#10;THEN &quot;Feta Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Friggitello Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Friggitello Peppers&quot;)&#13;&#10;THEN &quot;Friggitello Peppers&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Green Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Green Olives&quot;)&#13;&#10;THEN &quot;Green Olives&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Jalapeno Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Jalapeno Peppers&quot;)&#13;&#10;THEN &quot;Jalapeno Peppers&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Onions&quot;)&#13;&#10;THEN &quot;Onions&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Peperoncini verdi&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Peperoncini verdi&quot;)&#13;&#10;THEN &quot;Peperoncini verdi&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Red Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Red Peppers&quot;)&#13;&#10;THEN &quot;Red Peppers&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Thai Sweet Chilli Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Thai Sweet Chilli Sauce&quot;)&#13;&#10;THEN &quot;Thai Sweet Chilli Sauce&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Thyme&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Thyme&quot;)&#13;&#10;THEN &quot;Thyme&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Alfredo Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Alfredo Sauce&quot;)&#13;&#10;THEN &quot;Alfredo Sauce&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Barbecue Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Barbecue Sauce&quot;)&#13;&#10;THEN &quot;Barbecue Sauce&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Corn&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Corn&quot;)&#13;&#10;THEN &quot;Corn&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Fontina Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Fontina Cheese&quot;)&#13;&#10;THEN &quot;Fontina Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Kalamata Olives&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Kalamata Olives&quot;)&#13;&#10;THEN &quot;Kalamata Olives&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Oregano&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Oregano&quot;)&#13;&#10;THEN &quot;Oregano&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Zucchini&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Zucchini&quot;)&#13;&#10;THEN &quot;Zucchini&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Cilantro&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Cilantro&quot;)&#13;&#10;THEN &quot;Cilantro&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Gouda Cheese&quot;)&#13;&#10;THEN &quot;Gouda Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Pesto Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Pesto Sauce&quot;)&#13;&#10;THEN &quot;Pesto Sauce&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Red Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Red Onions&quot;)&#13;&#10;THEN &quot;Red Onions&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Asiago Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Asiago Cheese&quot;)&#13;&#10;THEN &quot;Asiago Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Chipotle Sauce&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Chipotle Sauce&quot;)&#13;&#10;THEN &quot;Chipotle Sauce&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Garlic&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Garlic&quot;)&#13;&#10;THEN &quot;Garlic&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Bacon&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Bacon&quot;)&#13;&#10;THEN &quot;Bacon&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Brie Carre Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Brie Carre Cheese&quot;)&#13;&#10;THEN &quot;Brie Carre Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Calabrese Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Calabrese Salami&quot;)&#13;&#10;THEN &quot;Calabrese Salami&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Chicken&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Chicken&quot;)&#13;&#10;THEN &quot;Chicken&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Coarse Sicilian Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Coarse Sicilian Salami&quot;)&#13;&#10;THEN &quot;Coarse Sicilian Salami&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Eggplant&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Eggplant&quot;)&#13;&#10;THEN &quot;Eggplant&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Genoa Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Genoa Salami&quot;)&#13;&#10;THEN &quot;Genoa Salami&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Prosciutto di San Daniele&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Prosciutto di San Daniele&quot;)&#13;&#10;THEN &quot;Prosciutto di San Daniele&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Ricotta Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Ricotta Cheese&quot;)&#13;&#10;THEN &quot;Ricotta Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Sliced Ham&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Sliced Ham&quot;)&#13;&#10;THEN &quot;Sliced Ham&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Soppressata Salami&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Soppressata Salami&quot;)&#13;&#10;THEN &quot;Soppressata Salami&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Anchovies&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Anchovies&quot;)&#13;&#10;THEN &quot;Anchovies&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Argula&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Argula&quot;)&#13;&#10;THEN &quot;Argula&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Capocollo&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Capocollo&quot;)&#13;&#10;THEN &quot;Capocollo&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Gorgonzola Piccante Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Gorgonzola Piccante Cheese&quot;)&#13;&#10;THEN &quot;Gorgonzola Piccante Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Pancetta&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Pancetta&quot;)&#13;&#10;THEN &quot;Pancetta&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Pineapple&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Pineapple&quot;)&#13;&#10;THEN &quot;Pineapple&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Prosciutto&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Prosciutto&quot;)&#13;&#10;THEN &quot;Prosciutto&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Provolone Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Provolone Cheese&quot;)&#13;&#10;THEN &quot;Provolone Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Caramelized Onions&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Caramelized Onions&quot;)&#13;&#10;THEN &quot;Caramelized Onions&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Italian Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Italian Sausage&quot;)&#13;&#10;THEN &quot;Italian Sausage&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Pepperoni&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Pepperoni&quot;)&#13;&#10;THEN &quot;Pepperoni&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Chorizo Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Chorizo Cheese&quot;)&#13;&#10;THEN &quot;Chorizo Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Green Peppers&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Green Peppers&quot;)&#13;&#10;THEN &quot;Green Peppers&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Mozzarella Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Mozzarella Cheese&quot;)&#13;&#10;THEN &quot;Mozzarella Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Smoked Gouda Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Smoked Gouda Cheese&quot;)&#13;&#10;THEN &quot;Smoked Gouda Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Mushrooms&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Mushrooms&quot;)&#13;&#10;THEN &quot;Mushrooms&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Luganega Sausage&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Luganega Sausage&quot;)&#13;&#10;THEN &quot;Luganega Sausage&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Parmigiano Reggiano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Parmigiano Reggiano Cheese&quot;)&#13;&#10;THEN &quot;Parmigiano Reggiano Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Pears&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Pears&quot;)&#13;&#10;THEN &quot;Pears&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Romano Cheese&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Romano Cheese&quot;)&#13;&#10;THEN &quot;Romano Cheese&quot;&#13;&#10;ELSEIF CONTAINS([pizza_ingredients - Split 1], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 2], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 3], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 4], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 5], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 6], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 7], &quot;Sun-dried Tomatoes&quot;) OR&#13;&#10;       CONTAINS([pizza_ingredients - Split 8], &quot;Sun-dried Tomatoes&quot;)&#13;&#10;THEN &quot;Sun-dried Tomatoes&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_257268194916069384]' derivation='Count' name='[cnt:Calculation_257268194916069384:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_257268194916069384]' derivation='None' name='[none:Calculation_257268194916069384:nk]' pivot='key' type='nominal' />
            <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
            <column caption='Pizza Ingredients - Split 1' datatype='string' name='[pizza_ingredients - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='Pizza Ingredients - Split 2' datatype='string' name='[pizza_ingredients - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 2 ) )' />
            </column>
            <column caption='Pizza Ingredients - Split 3' datatype='string' name='[pizza_ingredients - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 3 ) )' />
            </column>
            <column caption='Pizza Ingredients - Split 4' datatype='string' name='[pizza_ingredients - Split 4]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 4 ) )' />
            </column>
            <column caption='Pizza Ingredients - Split 5' datatype='string' name='[pizza_ingredients - Split 5]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 5 ) )' />
            </column>
            <column caption='Pizza Ingredients - Split 6' datatype='string' name='[pizza_ingredients - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 6 ) )' />
            </column>
            <column caption='Pizza Ingredients - Split 7' datatype='string' name='[pizza_ingredients - Split 7]' role='dimension' type='nominal' user:SplitFieldIndex='7' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 7 ) )' />
            </column>
            <column caption='Pizza Ingredients - Split 8' datatype='string' name='[pizza_ingredients - Split 8]' role='dimension' type='nominal' user:SplitFieldIndex='8' user:SplitFieldOrigin='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_ingredients]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [pizza_ingredients], &quot;,&quot;, 8 ) )' />
            </column>
            <column caption='Pizza Ingredients' datatype='string' name='[pizza_ingredients]' role='dimension' type='nominal' />
            <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Calculation_257268194916069384:nk]' value='9' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:Calculation_257268194916069384:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e5fff2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:Calculation_257268194916069384:qk]' />
              <text column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Calculation_257268194916069384:nk]' />
              <color column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Calculation_257268194916069384:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='6' />
                <format attr='color' value='#000000' />
                <format attr='font-family' value='Tableau Medium' />
                <format attr='font-weight' value='normal' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9C953C1D-0C0E-4217-B191-9145E62C9E66}' />
    </worksheet>
    <worksheet name='Most sold Pizza Size'>
      <table>
        <view>
          <datasources>
            <datasource caption='pizza_sales (Pizza_Sales)' name='federated.03aaaz509d0hyu194xdnb0v5r7yk' />
          </datasources>
          <datasource-dependencies datasource='federated.03aaaz509d0hyu194xdnb0v5r7yk'>
            <column-instance column='[pizza_size]' derivation='Count' name='[cnt:pizza_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
            <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_size:qk]' scope='rows' value='Count' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]' value='center' />
            <format attr='vertical-align' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]' value='bottom' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_size:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#ffffff4b' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_size:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_size:qk]</rows>
        <cols>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</cols>
      </table>
      <simple-id uuid='{CA7C96CA-6E69-4D79-955B-052062EEB64E}' />
    </worksheet>
    <worksheet name='Sales by Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='pizza_sales (Pizza_Sales)' name='federated.03aaaz509d0hyu194xdnb0v5r7yk' />
          </datasources>
          <datasource-dependencies datasource='federated.03aaaz509d0hyu194xdnb0v5r7yk'>
            <column caption='Order-hours' datatype='string' name='[Calculation_257268194904588292]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATEPART(&apos;hour&apos;, [order_time]) &lt; 3 THEN &apos;00:00 - 03:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 6 THEN &apos;03:00 - 06:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 9 THEN &apos;06:00 - 09:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 12 THEN &apos;09:00 - 12:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 15 THEN &apos;12:00 - 15:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 18 THEN &apos;15:00 - 18:00&apos;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;, [order_time]) &lt; 21 THEN &apos;18:00 - 21:00&apos;&#13;&#10;ELSE &apos;21:00 - 00:00&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[order_date]' derivation='Month' name='[mn:order_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_257268194904588292]' derivation='None' name='[none:Calculation_257268194904588292:nk]' pivot='key' type='nominal' />
            <column-instance column='[order_date]' derivation='None' name='[none:order_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
            <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
            <column caption='Order Time' datatype='datetime' name='[order_time]' role='dimension' type='ordinal' />
            <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[mn:order_date:ok]'>
            <groupfilter from='1' function='range' level='[mn:order_date:ok]' to='12' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[mn:order_date:ok]</column>
            <column>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:order_date:qk]' field-type='quantitative' major-origin='#2015-01-01#' major-spacing='1.0' major-units='months' max='#2016-01-01#' min='#2014-12-25#' range-type='fixed' reverse='true' scope='rows' type='space' />
            <format attr='height' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Calculation_257268194904588292:nk]' value='22' />
            <format attr='title' class='0' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:order_date:qk]' scope='rows' value='Order Date' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Calculation_257268194904588292:nk]' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:order_date:qk]' value='*dd/mm/yy' />
            <format attr='font-size' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Calculation_257268194904588292:nk]' value='7' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[sum:total_price:qk]' num-steps='20' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#ced0e3</color>
                <color>#afb3d5</color>
                <color>#9197c8</color>
                <color>#777eba</color>
                <color>#5e66ad</color>
                <color>#48519f</color>
                <color>#353f91</color>
                <color>#242e84</color>
                <color>#162076</color>
                <color>#0a1469</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e5fff2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[sum:total_price:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Order-hours:&#9;</run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Calculation_257268194904588292:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Order Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:order_date:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Total Price:&#9;</run>
                <run bold='true'><![CDATA[<[federated.03aaaz509d0hyu194xdnb0v5r7yk].[sum:total_price:qk]>$]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.38381215929985046' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:order_date:qk]</rows>
        <cols>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Calculation_257268194904588292:nk]</cols>
      </table>
      <simple-id uuid='{E86CD130-ECDF-46E9-9654-F52275DBBC3E}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='pizza_sales (Pizza_Sales)' name='federated.03aaaz509d0hyu194xdnb0v5r7yk' />
          </datasources>
          <datasource-dependencies datasource='federated.03aaaz509d0hyu194xdnb0v5r7yk'>
            <column caption='Count' datatype='integer' name='[Calculation_1622140357856477186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Edges' datatype='integer' name='[Calculation_1622140357856608259]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_1622140357856661508]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Angle' datatype='real' name='[Calculation_1622140357856747525]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='([Calculation_1622140357856608259]-1)*(2*PI()/WINDOW_MAX([Calculation_1622140357856608259]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Number of slices' datatype='integer' name='[Calculation_1622140357857181702]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX([Calculation_1622140357856477186])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Radius' datatype='real' name='[Calculation_1622140357857398791]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SQRT((COUNT([pizza_size]))/PI())' />
            </column>
            <column caption='X' datatype='real' name='[Calculation_1622140357859627016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Calculation_1622140357856661508]=1 OR &#13;&#10;[Calculation_1622140357856661508]=WINDOW_MAX([Calculation_1622140357856661508]),&#13;&#10;0,&#13;&#10;WINDOW_MAX([Calculation_1622140357857398791])*COS([Calculation_1622140357856747525]+&#13;&#10;((([Calculation_1622140357856661508]-2)*WINDOW_MAX(2*PI())/[Calculation_1622140357857181702]*99))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Y' datatype='real' name='[Calculation_1622140357860528137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Calculation_1622140357856661508]=1 OR &#13;&#10;[Calculation_1622140357856661508]=WINDOW_MAX([Calculation_1622140357856661508]),&#13;&#10;0,&#13;&#10;WINDOW_MAX([Calculation_1622140357857398791])*SIN([Calculation_1622140357856747525]+&#13;&#10;((([Calculation_1622140357856661508]-2)*WINDOW_MAX(2*PI())/[Calculation_1622140357857181702]*99))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='None' caption='Path (bin)' datatype='integer' name='[Path (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Path]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Path]' role='measure' type='quantitative' />
            <column-instance column='[pizza_size]' derivation='Count' name='[cnt:pizza_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path (bin)]' derivation='None' name='[none:Path (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
            <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1622140357859627016]' derivation='User' name='[usr:Calculation_1622140357859627016:qk:26]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[Calculation_1622140357856747525]' ordering-type='Field'>
                <order field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[Path (bin)]' />
                <order field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_size]' />
              </table-calc>
              <table-calc field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[Calculation_1622140357857181702]' ordering-type='Field'>
                <order field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[Path (bin)]' />
                <order field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_size]' />
              </table-calc>
              <table-calc field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[Calculation_1622140357856477186]' ordering-field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_size]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1622140357860528137]' derivation='User' name='[usr:Calculation_1622140357860528137:qk:13]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_size]' ordering-type='Field' />
              <table-calc field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[Calculation_1622140357856747525]' ordering-field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_size]' ordering-type='Field' />
              <table-calc field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[Calculation_1622140357857181702]' ordering-type='Field'>
                <order field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[Path (bin)]' />
                <order field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_size]' />
              </table-calc>
              <table-calc field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[Calculation_1622140357856477186]' ordering-field='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[pizza_size]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <slices>
            <column>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]' />
              <lod column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_size:qk]' />
              <path column='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Path (bin):ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_1622140357860528137:qk:13]</rows>
        <cols>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[usr:Calculation_1622140357859627016:qk:26]</cols>
        <show-full-range>
          <column>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[Path (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{72A740DF-A24F-4B6A-83AB-ABD6595D0A72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Pizza Sales Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e5fff2' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='pizza_sales (Pizza_Sales)' name='federated.03aaaz509d0hyu194xdnb0v5r7yk' />
      </datasources>
      <datasource-dependencies datasource='federated.03aaaz509d0hyu194xdnb0v5r7yk'>
        <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
        <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='27995' id='9' name='Favourite Pizza' w='24707' x='1563' y='12760' />
        <zone h='59505' id='12' name='Sales by Hours' w='58008' x='40430' y='38932' />
        <zone h='57943' id='14' name='Favourite Toppings' w='37988' x='977' y='40365' />
        <zone forceUpdate='true' h='4818' id='20' type-v2='text' w='31152' x='879' y='911'>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='18'>Pizza Sales Dashboard</run>
          </formatted-text>
        </zone>
        <zone h='36849' id='21' name='Categorywise Pizza Sales' w='59277' x='39063' y='521' />
        <zone h='3385' id='22' mode='checkdropdown' name='Categorywise Pizza Sales' param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]' show-exclude='false' show-filter-state='false' show-mode='false' type-v2='filter' w='19531' x='8203' y='6641' />
        <zone h='5339' id='23' leg-item-layout='grid' name='Categorywise Pizza Sales' pane-specification-id='0' param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]' show-title='false' type-v2='color' w='24609' x='73047' y='1172' />
        <zone h='3906' id='26' type-v2='text' w='9766' x='1563' y='6120'>
          <formatted-text>
            <run bold='true' fontname='Tableau Semibold' fontsize='12'>Filter:</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='27' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone h='3385' id='22' mode='checkdropdown' name='Categorywise Pizza Sales' param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]' show-exclude='false' show-filter-state='false' show-mode='false' type-v2='filter' w='19531' x='8203' y='6641'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36849' id='21' is-fixed='true' name='Categorywise Pizza Sales' w='59277' x='39063' y='521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5339' id='23' leg-item-layout='grid' name='Categorywise Pizza Sales' pane-specification-id='0' param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]' show-title='false' type-v2='color' w='24609' x='73047' y='1172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4818' id='20' type-v2='text' w='31152' x='879' y='911'>
                  <formatted-text>
                    <run bold='true' fontcolor='#e15759' fontsize='18'>Pizza Sales Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3906' id='26' type-v2='text' w='9766' x='1563' y='6120'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Semibold' fontsize='12'>Filter:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='215' h='27995' id='9' is-fixed='true' name='Favourite Pizza' w='24707' x='1563' y='12760'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59505' id='12' is-fixed='true' name='Sales by Hours' w='58008' x='40430' y='38932'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57943' id='14' is-fixed='true' name='Favourite Toppings' w='37988' x='977' y='40365'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{968AAE3A-7D0D-418C-821B-B19D81F828C0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Favourite Pizza'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_name:nk]&#10;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]&#10;[federated.03aaaz509d0hyu194xdnb0v5r7yk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[:Measure Names]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_name:nk]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6ACE858-4165-4231-9D25-55177C43EE96}' />
    </window>
    <window class='dashboard' maximized='true' name='Pizza Sales Dashboard'>
      <viewpoints>
        <viewpoint name='Categorywise Pizza Sales'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Favourite Pizza'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Favourite Toppings'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Hours'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FF4C18CF-2C66-48DA-9011-D821CF19703C}' />
    </window>
    <window class='worksheet' name='Categorywise Pizza Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_category:nk]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[yr:order_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9CAB70C-DF58-4F96-9F43-7AC568060CAC}' />
    </window>
    <window class='worksheet' name='Sales by Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[sum:total_price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[mn:order_date:ok]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Calculation_257268194904588292:nk]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[yr:order_date:ok]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[yr:order_time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D81F206-AEA0-47B8-97CA-D152BE2E76A5}' />
    </window>
    <window class='worksheet' name='Favourite Toppings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Calculation_257268194916069384:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B90748A-4F5F-4C5D-AE8B-F34C993A1CB5}' />
    </window>
    <window class='worksheet' name='Most sold Pizza Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[cnt:pizza_size:qk]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{115B6885-0454-4221-8747-3FCCB6DC39C5}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:Path (bin):ok]</field>
            <field>[federated.03aaaz509d0hyu194xdnb0v5r7yk].[none:pizza_size:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FF660F3-7236-495C-B474-D2F019961A8F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Categorywise Pizza Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Favourite Pizza' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Favourite Toppings' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Most sold Pizza Size' width='192'>
      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
      OQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pizza Sales Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales by Hours' width='192'>
      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
      /wEMPdR0Qw2gYwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      v0cr2/aMdK9BAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
